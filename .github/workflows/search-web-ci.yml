name: Search web CI

on:
  pull_request:
    paths:
      - "search-web/**"

defaults:
  run:
    shell: bash
    working-directory: ./search-web

jobs:
  setup-job:
    runs-on: ubuntu-20.04

    if: github.repository == 'bcgov/sbc-search'

    steps:
      - uses: actions/checkout@v2
      - run: "true"

  linting:
    needs: setup-job
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [14.15.1]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          make setup
      - name: Linting
        run: |
          make lint

  testing:
    needs: setup-job
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [14.15.1]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          make setup
      - name: Test with pytest
        id: test
        run: |
          make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: searchweb
          name: codecov-search-web
          fail_ci_if_error: true

  build-strictness:
    needs: setup-job
    runs-on: ubuntu-20.04

    env:
      DOCKER_NAME: search-web

    steps:
      - uses: actions/checkout@v2
      - name: build to check strictness
        id: build
        run: |
          make build-nc

      - name: export image
        id: export
        run: |
          docker save ${{ env.DOCKER_NAME }} > /tmp/${{ env.DOCKER_NAME }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DOCKER_NAME }}
          path: /tmp/${{ env.DOCKER_NAME }}.tar

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: build-strictness

    env:
      DOCKER_NAME: search-web

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOCKER_NAME }}
          path: /tmp
      - name: Load image
        run: |
          ls  -l /tmp
          docker load --input /tmp/${{ env.DOCKER_NAME }}.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_NAME }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      # delete-artifact
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ env.DOCKER_NAME }}
